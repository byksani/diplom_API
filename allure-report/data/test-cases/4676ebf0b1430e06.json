{"uid":"4676ebf0b1430e06","name":"test_create_order_without_auth_success","fullName":"tests.test_order_create.TestCreateOrder#test_create_order_without_auth_success","historyId":"57c32a884762fbd7e272afb350e3380a","time":{"start":1736894413442,"stop":1736894413863,"duration":421},"status":"failed","statusMessage":"AssertionError: Ожидался статус 200, а получили статус 500.\nassert 500 == 200","statusTrace":"self = <tests.test_order_create.TestCreateOrder object at 0x104471670>, order_methods = <methods.orders_methods.OrderMethods object at 0x10444fd30>\n\n    @allure.step(\"Создание заказа без авторизации и с ингредиентами\")\n    def test_create_order_without_auth_success(self, order_methods):\n        payload = {\n            'ingredients': Ingredients.DEFAULT_INGREDIENTS\n        }\n    \n        status_code, response_context = order_methods.create_order('', payload)\n    \n>       assert status_code == 200, \\\n            f\"Ожидался статус 200, а получили статус {status_code}.\"\nE       AssertionError: Ожидался статус 200, а получили статус 500.\nE       assert 500 == 200\n\ntests/test_order_create.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"order_methods","time":{"start":1736894413441,"stop":1736894413441,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ожидался статус 200, а получили статус 500.\nassert 500 == 200","statusTrace":"self = <tests.test_order_create.TestCreateOrder object at 0x104471670>, order_methods = <methods.orders_methods.OrderMethods object at 0x10444fd30>\n\n    @allure.step(\"Создание заказа без авторизации и с ингредиентами\")\n    def test_create_order_without_auth_success(self, order_methods):\n        payload = {\n            'ingredients': Ingredients.DEFAULT_INGREDIENTS\n        }\n    \n        status_code, response_context = order_methods.create_order('', payload)\n    \n>       assert status_code == 200, \\\n            f\"Ожидался статус 200, а получили статус {status_code}.\"\nE       AssertionError: Ожидался статус 200, а получили статус 500.\nE       assert 500 == 200\n\ntests/test_order_create.py:25: AssertionError","steps":[{"name":"Создание заказа без авторизации и с ингредиентами","time":{"start":1736894413442,"stop":1736894413857,"duration":415},"status":"failed","statusMessage":"AssertionError: Ожидался статус 200, а получили статус 500.\nassert 500 == 200\n","statusTrace":"  File \"/Users/oxanaklimocheva/Documents/pycharm_project/qa_python4/.venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/oxanaklimocheva/Documents/yandex/diplom/diplom_API/tests/test_order_create.py\", line 25, in test_create_order_without_auth_success\n    assert status_code == 200, \\\n","steps":[{"name":"Создание заказа","time":{"start":1736894413442,"stop":1736894413857,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"token","value":"''"},{"name":"payload","value":"{'ingredients': ['61c0c5a71d1f82001bdooo6d', '61c0c5a71d1f82001bdnnn6f']}"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"order_methods","value":"<methods.orders_methods.OrderMethods object at 0x10444fd30>"}],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_order_create"},{"name":"subSuite","value":"TestCreateOrder"},{"name":"host","value":"Oxanas-MacBook-Pro.local"},{"name":"thread","value":"88969-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_order_create"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4676ebf0b1430e06.json","parameterValues":[]}